apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

Properties properties = new Properties()
boolean isHasFile = false
try {
    def localFile = project.rootProject.file("local.properties")
    if (localFile != null && localFile.exists()) {
        isHasFile = true
        properties.load(localFile.newDataInputStream())
    }
} catch (Exception ignored) {
    print("local.properties not found")
}

def projectGitUrl = Publish.gitUrl
def projectSiteUrl = Publish.website
def projectVersion = Publish.publishVersion
def projectGroupId = Publish.groupId
def projectUserOrg = Publish.userOrg
def projectEmail = Publish.email
def projectDesc = Publish.desc
def projectName = "fly-imageloader-glide"

group = projectGroupId
install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging "aar"
                name projectName
                groupId projectGroupId
                artifactId projectName
                version projectVersion
                url projectSiteUrl
                description projectDesc
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id projectUserOrg
                        name projectUserOrg
                        email projectEmail
                    }
                }
                scm {
                    connection projectGitUrl
                    developerConnection projectGitUrl
                    url projectSiteUrl
                }
            }
        }
    }
}

bintray {
    user = isHasFile ? properties.getProperty("bintray.user") : System.getenv("bintray_user")
    key = isHasFile ? properties.getProperty("bintray.apikey") : System.getenv("bintray_apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = projectName
        websiteUrl = projectSiteUrl
        vcsUrl = projectGitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version projectVersion
        links "http://docs.oracle.com/javase/7/docs/api"
        title projectName
    }
}
